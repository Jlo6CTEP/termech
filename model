import numpy as np
import matplotlib.pyplot as plt

v_min = 0.0001
h_min = 0.0001
k = 0.7

J = 0.000024159
g = 9.82
r = 0.014
m = 0.06385
a = m * g / (m + J / (2 * m * r**2))

v = 0.002
h = 1
t = 0
dt = 0.01

H = []
V = []
W = []
T = []
A = []

t_e = [0.00, 0.03, 0.07, 0.10, 0.13, 0.17, 0.20, 0.23, 0.27, 0.30, 0.33, 0.37,
       0.40, 0.43, 0.47, 0.50, 0.53, 0.57, 0.60, 0.63, 0.67, 0.70, 0.73, 0.77,
       0.80, 0.83, 0.87, 0.90, 0.93, 0.97, 1.00, 1.03, 1.07, 1.10, 1.13, 1.17,
       1.20, 1.23, 1.27, 1.30, 1.33, 1.37, 1.40, 1.43, 1.47, 1.50, 1.53, 1.57,
       1.60, 1.63, 1.67, 1.70, 1.73, 1.77, 1.80, 1.83, 1.87, 1.90, 1.93, 1.97,
       2.00, 2.03, 2.07, 2.10, 2.13, 2.17, 2.20, 2.23, 2.27, 2.30, 2.33, 2.37,
       2.40, 2.43, 2.47, 2.50, 2.53, 2.57, 2.60, 2.63, 2.67, 2.70, 2.73, 2.77,
       2.80, 2.83, 2.87, 2.90, 2.93, 2.97, 3.00, 3.03, 3.07, 3.10, 3.13, 3.17,
       3.20, 3.23, 3.27, 3.30, 3.33, 3.37, 3.40, 3.43, 3.47, 3.50, 3.53, 3.57,
       3.60, 3.63, 3.67, 3.70, 3.73, 3.77, 3.80, 3.83, 3.87, 3.90, 3.93, 3.97,
       4.00, 4.03, 4.07, 4.10, 4.13, 4.17, 4.20, 4.23, 4.27, 4.30, 4.33, 4.37,
       4.40, 4.43, 4.47, 4.50, 4.53, 4.57, 4.60, 4.63, 4.67, 4.70, 4.73, 4.77,
       4.80, 4.83, 4.87, 4.90, 4.93, 4.97, 5.00, 5.03, 5.07, 5.10, 5.13, 5.17,
       5.20, 5.23, 5.27, 5.30, 5.33, 5.37, 5.40, 5.43, 5.47, 5.50, 5.53, 5.57,
       5.60, 5.63, 5.67, 5.70, 5.73, 5.76, 5.80, 5.83, 5.86, 5.90, 5.93, 5.96,
       6.00, 6.03, 6.06, 6.10, 6.13, 6.16, 6.20, 6.23, 6.26, 6.30, 6.33, 6.36,
       6.40, 6.43, 6.46, 6.50, 6.53, 6.56, 6.60, 6.63, 6.66, 6.70, 6.73, 6.76,
       6.80, 6.83, 6.86, 6.90, 6.93, 6.96, 7.00, 7.03, 7.06, 7.10, 7.13, 7.16,
       7.20, 7.23, 7.26, 7.30, 7.33, 7.36, 7.40, 7.43, 7.46, 7.50, 7.53, 7.56,
       7.60, 7.63, 7.66, 7.70, 7.73, 7.76, 7.80, 7.83, 7.86, 7.90, 7.93, 7.96,
       8.00, 8.03, 8.06, 8.10, 8.13, 8.16, 8.20, 8.23, 8.26, 8.30, 8.33, 8.36,
       8.40, 8.43, 8.46, 8.50, 8.53, 8.56, 8.60, 8.63, 8.66, 8.70, 8.73, 8.76,
       8.80, 8.83, 8.86, 8.90, 8.93, 8.96, 9.00, 9.03, 9.06, 9.10, 9.13, 9.16,
       9.20, 9.23, 9.26, 9.30, 9.33, 9.36, 9.40, 9.43, 9.46, 9.50, 9.53, 9.56,
       9.60, 9.63, 9.66, 9.70, 9.73, 9.76, 9.80, 9.83, 9.86, 9.90, 9.93, 9.96,
       10.00, 10.03, 10.06, 10.10, 10.13, 10.16, 10.20, 10.23, 10.26, 10.30,
       10.33, 10.36, 10.40, 10.43, 10.46, 10.50, 10.53, 10.56, 10.60, 10.63,
       10.66, 10.70, 10.73, 10.76, 10.80, 10.83, 10.86, 10.90, 10.93, 10.96,
       11.00, 11.03, 11.06, 11.10, 11.13, 11.16, 11.20, 11.23, 11.26, 11.30,
       11.33, 11.36, 11.40, 11.43, 11.46, 11.50, 11.53, 11.56, 11.60, 11.63,
       11.66, 11.70, 11.73, 11.76, 11.80, 11.83, 11.86, 11.90, 11.93, 11.96,
       12.00, 12.03, 12.06, 12.10, 12.13, 12.16, 12.20, 12.23, 12.26, 12.30,
       12.33, 12.36, 12.40, 12.43, 12.46, 12.50, 12.53, 12.56, 12.60, 12.63,
       12.66, 12.70, 12.73, 12.76, 12.80, 12.83, 12.86, 12.90, 12.93, 12.96,
       13.00, 13.03, 13.06, 13.10, 13.13, 13.16, 13.20, 13.23]

x_e = [ 1.01, 1.01, 1.00, 1.00, 0.99, 0.99, 0.94, 0.92, 0.89, 0.86, 0.84, 0.80,
        0.77, 0.73, 0.70, 0.66, 0.62, 0.59, 0.55, 0.51, 0.46, 0.43, 0.39, 0.35,
        0.31, 0.27, 0.23, 0.20, 0.16, 0.13, 0.10, 0.08, 0.05, 0.02, 0.02, 0.05,
        0.11, 0.15, 0.17, 0.19, 0.20, 0.23, 0.26, 0.30, 0.33, 0.37, 0.39, 0.42,
        0.45, 0.48, 0.50, 0.53, 0.56, 0.59, 0.61, 0.63, 0.65, 0.67, 0.68, 0.70,
        0.71, 0.72, 0.72, 0.73, 0.73, 0.73, 0.73, 0.72, 0.70, 0.69, 0.69, 0.67,
        0.65, 0.64, 0.62, 0.60, 0.58, 0.55, 0.53, 0.50, 0.48, 0.45, 0.42, 0.39,
        0.37, 0.34, 0.31, 0.26, 0.24, 0.21, 0.18, 0.16, 0.13, 0.10, 0.07, 0.05,
        0.03, 0.01, 0.00, 0.05, 0.09, 0.12, 0.14, 0.15, 0.16, 0.18, 0.21, 0.23,
        0.26, 0.28, 0.31, 0.33, 0.34, 0.37, 0.38, 0.40, 0.42, 0.44, 0.46, 0.47,
        0.48, 0.49, 0.50, 0.51, 0.51, 0.51, 0.51, 0.51, 0.50, 0.51, 0.51, 0.49,
        0.49, 0.49, 0.49, 0.46, 0.44, 0.44, 0.42, 0.39, 0.39, 0.36, 0.35, 0.33,
        0.31, 0.29, 0.27, 0.25, 0.23, 0.21, 0.18, 0.17, 0.15, 0.13, 0.11, 0.09,
        0.07, 0.05, 0.03, 0.01, 0.02, 0.05, 0.08, 0.10, 0.11, 0.12, 0.13, 0.16,
        0.17, 0.19, 0.20, 0.22, 0.24, 0.24, 0.26, 0.28, 0.28, 0.30, 0.32, 0.32,
        0.33, 0.35, 0.35, 0.34, 0.36, 0.37, 0.36, 0.34, 0.34, 0.36, 0.33, 0.33,
        0.32, 0.31, 0.32, 0.30, 0.29, 0.27, 0.28, 0.27, 0.24, 0.24, 0.23, 0.22,
        0.21, 0.18, 0.18, 0.16, 0.15, 0.13, 0.12, 0.10, 0.09, 0.07, 0.06, 0.04,
        0.03, 0.01, 0.02, 0.04, 0.07, 0.08, 0.08, 0.09, 0.10, 0.12, 0.12, 0.14,
        0.15, 0.16, 0.17, 0.18, 0.19, 0.19, 0.19, 0.21, 0.20, 0.21, 0.20, 0.20,
        0.22, 0.21, 0.21, 0.22, 0.22, 0.21, 0.20, 0.18, 0.19, 0.19, 0.18, 0.16,
        0.16, 0.16, 0.14, 0.13, 0.13, 0.11, 0.11, 0.09, 0.09, 0.08, 0.07, 0.06,
        0.04, 0.03, 0.03, 0.02, 0.04, 0.06, 0.07, 0.07, 0.07, 0.08, 0.09, 0.10,
        0.10, 0.12, 0.12, 0.12, 0.11, 0.12, 0.12, 0.13, 0.12, 0.12, 0.12, 0.12,
        0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.12, 0.11, 0.11, 0.10, 0.10,
        0.10, 0.09, 0.08, 0.07, 0.07, 0.05, 0.05, 0.04, 0.03, 0.03, 0.02, 0.00,
        0.00, 0.02, 0.02, 0.03, 0.03, 0.04, 0.04, 0.05, 0.06, 0.07, 0.07, 0.07,
        0.08, 0.08, 0.10, 0.10, 0.10, 0.09, 0.09, 0.09, 0.08, 0.08, 0.07, 0.07,
        0.06, 0.06, 0.06, 0.05, 0.04, 0.04, 0.03, 0.03, 0.02, 0.02, 0.02, 0.01,
        0.01, 0.00, 0.00, 0.01, 0.02, 0.01, 0.03, 0.03, 0.04, 0.05, 0.04, 0.06,
        0.06, 0.05, 0.05, 0.06, 0.05, 0.06, 0.04, 0.06, 0.06, 0.06, 0.06, 0.05,
        0.05, 0.05, 0.04, 0.04, 0.03, 0.03, 0.02, 0.02, 0.01, 0.02, 0.03, 0.03,
        0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.06, 0.04, 0.04, 0.04, 0.04, 0.04,
        0.03, 0.03]


t_step = 0

move = 1

while (abs(h) >= h_min or abs(v) >= v_min) and t < 20:
    try:
        h -= (move * v * dt + a * dt ** 2 / 2)
        v += a * dt
        w = abs(v) / r

        H.append(h)
        V.append(v)
        W.append(w)
        T.append(t)
        A.append(a)

        if h < h_min and abs(v) >= v_min:
            a = - a
            v = 0.82 * v
            move = - move
            print()

        elif abs(h) >= h_min and v <= v_min:
            move = - move
            a = - a

        t += dt
    except KeyboardInterrupt:
        break

plt.plot(T, H, label='theoretical')
plt.plot(t_e, x_e, label='practical')
plt.xlabel('t, s')
plt.ylabel('x, m')
plt.title('1 m fall, x coordinate vs time')
plt.legend()
plt.show()
